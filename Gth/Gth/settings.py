"""
Django settings for Gth project.

Generated by 'django-admin startproject' using Django 1.9.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
import posixpath

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '7813e493-6663-41bf-855b-1488e1f6ffe7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'app',
    # Add your apps here to enable them
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'widget_tweaks',
    'pipeline',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Gth.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'Gth.middleware.navbar.process_request'
            ],
        },
    },
]

WSGI_APPLICATION = 'Gth.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = posixpath.join(*(BASE_DIR.split(os.path.sep) + ['static']))

LOGIN_URL = '/login'


STATICFILES_DIRS = (
  os.path.join(os.path.dirname(__file__), '../app/static/', 'bower_components'),
)
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'pipeline.finders.PipelineFinder',
)
PIPELINE = {
    'STYLESHEETS': {
        'libraries': {
            'source_filenames': (
                'bower_components/bootstrap/dist/css/bootstrap.min.*',
                'bower_components/bootstrap/dist/css/bootstrap-theme.min.*',
                'bower_components/font-awesome/css/font-awesome.min.*',
                'bower_components/select2/dist/css/select2.min.css',
                'bower_components/simple-line-icons/css/simple-line-icons.css',
            ),
            'output_filename': 'css/libs.min.css',
            'extra_context': {
                'media': 'screen,projection',
            },
        },
    },
    'JAVASCRIPT': {
        'libraries': {
            'source_filenames': (
                'bower_components/jquery/dist/jquery.min.*',
                'bower_components/bootstrap/dist/js/bootstrap.min.js',
                'bower_components/jquery-slimscroll/dist/jquery.slimscroll.min.js',
                'bower_components/jquery-form/jquery.form.js',
                'bower_components/jquery-validation/dist/jquery.validate.min.js',
                'bower_components/jquery-validation/dist/additional-methods.min.js',
                'bower_components/respond/dest/respond.min.js',
                'bower_components/respond/dest/respond.matchmedia.addListener.min.js',
                'bower_components/select2/dist/js/select2.full.min.js',
                'bower_components/Sortable/Sortable.min.js',
                'bower_components/jquery-ui-jquery-ui.min.js'

            ),
            'output_filename': 'scripts/libs.min.js',
        }
    }
}
MEDIA_ROOT = os.path.join(os.path.dirname(__file__), '../app/uploads/')
MEDIA_URL = 'uploads/'